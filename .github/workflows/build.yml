name: build
on:
  push:
    branches:
      - develop
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  prepare-matrix:
    runs-on: ubuntu-18.04
    outputs:
      proj: ${{ steps.set.outputs.proj }}
      target: ${{ steps.set.outputs.target }}
    steps:
      - uses: actions/checkout@v2
      - id: set
        name: set variables
        run: |
          echo '::set-output name=proj::'$(jq -c '.proj | with_entries(select(.value.in_matrix)) | keys' matrix.json)
          echo '::set-output name=target::'$(jq -c '.target | with_entries(select(.value.skip | not)) | keys' matrix.json)
  ndn-cxx:
    needs: [prepare-matrix]
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target:
          - ${{ fromJson(needs.prepare-matrix.outputs.target) }}
      max-parallel: 10
    name: ndn-cxx ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
      - run: bash build.sh ndn-cxx ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ndn-cxx ${{ matrix.target }}
          path: output
  proj:
    runs-on: ubuntu-18.04
    needs: [prepare-matrix, ndn-cxx]
    strategy:
      matrix:
        proj:
          - ${{ fromJson(needs.prepare-matrix.outputs.proj) }}
        target:
          - ${{ fromJson(needs.prepare-matrix.outputs.target) }}
      max-parallel: 10
    name: ${{ matrix.proj }} ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ndn-cxx ${{ matrix.target }}
          path: deps
      - run: bash build.sh ${{ matrix.proj }} ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.proj }} ${{ matrix.target }}
          path: output
  publish:
    runs-on: ubuntu-18.04
    needs: [proj]
    steps:
      - run: true
